DROP TABLE IF EXISTS PUBLIC.FILMS CASCADE;
DROP TABLE IF EXISTS PUBLIC.RATING CASCADE;
DROP TABLE IF EXISTS PUBLIC.GENRES CASCADE;
DROP TABLE IF EXISTS PUBLIC.FILM_GENRES CASCADE;
DROP TABLE IF EXISTS PUBLIC.USERS CASCADE;
DROP TABLE IF EXISTS PUBLIC.FRIENDSHIPS CASCADE;
DROP TABLE IF EXISTS PUBLIC.LIKES CASCADE;


CREATE TABLE IF NOT EXISTS PUBLIC.FILMS
(
    FIlM_ID      BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
    FIlM_NAME    VARCHAR(255)                                        NOT NULL,
    DESCRIPTION  VARCHAR(255)                                        NOT NULL,
    RELEASE_DATE DATE                                                NOT NULL,
    DURATION     INT                                                 NOT NULL,
    RATING_ID    INTEGER                                             NOT NULL
);

CREATE TABLE IF NOT EXISTS PUBLIC.RATING
(
    RATING_ID   BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
    RATING_NAME VARCHAR(10)                                         NOT NULL
);

CREATE TABLE IF NOT EXISTS PUBLIC.GENRES
(
    GENRE_ID   BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
    GENRE_NAME VARCHAR(100)                                        NOT NULL
);

CREATE TABLE IF NOT EXISTS PUBLIC.FILM_GENRES
(
    FILM_ID  BIGINT NOT NULL,
    GENRE_ID BIGINT NOT NULL,
    UNIQUE (FILM_ID, GENRE_ID)
);

CREATE TABLE IF NOT EXISTS PUBLIC.USERS
(
    USER_ID   BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
    EMAIL     VARCHAR(255)                                        NOT NULL,
    LOGIN     VARCHAR(255)                                        NOT NULL,
    USER_NAME VARCHAR(255)                                        NOT NULL,
    BIRTHDAY  DATE
);

CREATE TABLE IF NOT EXISTS PUBLIC.FRIENDSHIPS
(
    USER_ID   BIGINT  NOT NULL,
    FRIEND_ID BIGINT  NOT NULL,
    STATUS    BOOLEAN NOT NULL,
    UNIQUE (USER_ID, FRIEND_ID)
);

CREATE TABLE IF NOT EXISTS PUBLIC.LIKES
(
    FILM_ID BIGINT NOT NULL,
    USER_ID BIGINT NOT NULL,
    DATE    DATE   NOT NULL,
    UNIQUE (FILM_ID, USER_ID)
);


ALTER TABLE PUBLIC.FILMS
    ADD CONSTRAINT FK_FILM_RATING_ID FOREIGN KEY (RATING_ID) REFERENCES PUBLIC.RATING (RATING_ID);

ALTER TABLE PUBLIC.FILM_GENRES
    ADD CONSTRAINT FK_FILMS_GENRES_FILM_ID FOREIGN KEY (FILM_ID) REFERENCES FILMS (FILM_ID);
ALTER TABLE PUBLIC.FILM_GENRES
    ADD CONSTRAINT FK_FILM_GENRES_GENRES_ID FOREIGN KEY (GENRE_ID) REFERENCES GENRES (GENRE_ID);

ALTER TABLE PUBLIC.FRIENDSHIPS
    ADD CONSTRAINT FK_FRIENDSHIP_USER_ID FOREIGN KEY (USER_ID) REFERENCES USERS (USER_ID);
ALTER TABLE PUBLIC.FRIENDSHIPS
    ADD CONSTRAINT FK_FRIENDSHIP_FRIEND_ID FOREIGN KEY (FRIEND_ID) REFERENCES USERS (USER_ID);

ALTER TABLE PUBLIC.LIKES
    ADD CONSTRAINT FK_LIKES_FILM_ID FOREIGN KEY (FILM_ID) REFERENCES FILMS (FILM_ID);
ALTER TABLE PUBLIC.LIKES
    ADD CONSTRAINT FK_LIKES_USER_ID FOREIGN KEY (USER_ID) REFERENCES USERS (USER_ID);