/*
DROP TABLE IF EXISTS
    PUBLIC CASCADE;


ALTER TABLE PUBLIC.FILMS
    DROP CONSTRAINT IF EXISTS FK_FILMS_RATING_ID;

ALTER TABLE PUBLIC.GENRES
    DROP CONSTRAINT IF EXISTS FK_FILMS_GENRES_FILM_ID;
ALTER TABLE PUBLIC.GENRES
    DROP CONSTRAINT IF EXISTS FK_FILM_GENRES_GENRES_ID;

ALTER TABLE PUBLIC.FRIENDSHIPS
    DROP CONSTRAINT IF EXISTS FK_FRIENDSHIP_USER_ID;
ALTER TABLE PUBLIC.FRIENDSHIPS
    DROP CONSTRAINT IF EXISTS FK_FRIENDSHIP_FRIEND_ID;

ALTER TABLE PUBLIC.LIKES
    DROP CONSTRAINT IF EXISTS FK_LIKES_FILM_ID;
ALTER TABLE PUBLIC.LIKES
    DROP CONSTRAINT IF EXISTS FK_LIKES_USER_ID;


CREATE TABLE IF NOT EXISTS PUBLIC.FILMS
(
    FILM_ID      BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
    RATING_ID    INTEGER                                             NOT NULL,
    FILM_NAME    CHARACTER VARYING                                   NOT NULL,
    DESCRIPTION  CHARACTER VARYING                                   NOT NULL,
    RELEASE_DATE DATE                                                NOT NULL,
    DURATION     INT                                                 NOT NULL,
    RATE         INT DEFAULT 0
);



CREATE TABLE IF NOT EXISTS PUBLIC.GENRES
(
    GENRE_ID   BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
    GENRE_NAME CHARACTER VARYING                                   NOT NULL
);

CREATE TABLE IF NOT EXISTS PUBLIC.FILM_GENRES
(
    FILM_ID  BIGINT NOT NULL,
    GENRE_ID BIGINT NOT NULL
);

CREATE TABLE IF NOT EXISTS PUBLIC.USERS
(
    USER_ID  BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
    EMAIL    CHARACTER VARYING                                   NOT NULL,
    LOGIN    CHARACTER VARYING                                   NOT NULL,
    USR_NAME CHARACTER VARYING                                   NOT NULL,
    BIRTHDAY DATE
);

CREATE TABLE IF NOT EXISTS PUBLIC.FRIENDSHIPS
(
    USER_ID   BIGINT  NOT NULL,
    FRIEND_ID BIGINT  NOT NULL,
    STATUS    BOOLEAN NOT NULL,
    PRIMARY KEY (USER_ID, FRIEND_ID)
);

CREATE INDEX IF NOT EXISTS IDX_FRIENDSHIPS_USER_ID ON PUBLIC.FRIENDSHIPS (USER_ID);
CREATE INDEX IF NOT EXISTS IDX_FRIENDSHIPS_FRIEND_ID ON PUBLIC.FRIENDSHIPS (FRIEND_ID);


CREATE TABLE IF NOT EXISTS PUBLIC.LIKES
(
    FILM_ID BIGINT NOT NULL,
    USER_ID BIGINT NOT NULL,
    DATE    DATE   NOT NULL,
    PRIMARY KEY (FILM_ID, USER_ID)
);


ALTER TABLE PUBLIC.FILM_GENRES
    ADD CONSTRAINT IF NOT EXISTS FK_FILMS_GENRES_FILM_ID FOREIGN KEY (FILM_ID) REFERENCES FILMS (FILM_ID);
ALTER TABLE PUBLIC.FILM_GENRES
    ADD CONSTRAINT FK_FILM_GENRES_GENRES_ID FOREIGN KEY (GENRE_ID) REFERENCES GENRES (GENRE_ID);

ALTER TABLE PUBLIC.FRIENDSHIPS
    ADD CONSTRAINT FK_FRIENDSHIP_USER_ID FOREIGN KEY (USER_ID) REFERENCES USERS (USER_ID);
ALTER TABLE PUBLIC.FRIENDSHIPS
    ADD CONSTRAINT FK_FRIENDSHIP_FRIEND_ID FOREIGN KEY (FRIEND_ID) REFERENCES USERS (USER_ID);

ALTER TABLE PUBLIC.LIKES
    ADD CONSTRAINT FK_LIKES_FILM_ID FOREIGN KEY (FILM_ID) REFERENCES FILMS (FILM_ID);
ALTER TABLE PUBLIC.LIKES
    ADD CONSTRAINT FK_LIKES_USER_ID FOREIGN KEY (USER_ID) REFERENCES USERS (USER_ID);
*/

DROP TABLE IF EXISTS "film_genres" CASCADE;
DROP TABLE IF EXISTS "friendship" CASCADE;
DROP TABLE IF EXISTS "genres" CASCADE;
DROP TABLE IF EXISTS "likes" CASCADE;
DROP TABLE IF EXISTS "films" CASCADE;
DROP TABLE IF EXISTS PUBLIC.RATING CASCADE;
DROP TABLE IF EXISTS "users" CASCADE;

CREATE TABLE IF NOT EXISTS "films"
(
    "film_id"      BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
    "rating_id"    BIGINT                                              NOT NULL,
    "film_name"    VARCHAR(200)                                        NOT NULL,
    "description"  VARCHAR(200),
    "release_date" DATE                                                NOT NULL,
    "length"       INT                                                 NOT NULL,
    "rate"         INT DEFAULT 0
);

CREATE TABLE IF NOT EXISTS PUBLIC.RATING
(
    RATING_ID   BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
    RATING_NAME CHARACTER VARYING                                   NOT NULL
);

CREATE TABLE IF NOT EXISTS "genres"
(
    "genre_id"   BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
    "genre_name" VARCHAR(200) UNIQUE                                 NOT NULL
);

CREATE TABLE IF NOT EXISTS "film_genres"
(
    "film_id"  BIGINT NOT NULL,
    "genre_id" BIGINT NOT NULL
);

CREATE TABLE IF NOT EXISTS "users"
(
    "user_id"   BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
    "email"     VARCHAR(200) UNIQUE                                 NOT NULL,
    "login"     VARCHAR(200) UNIQUE                                 NOT NULL,
    "user_name" VARCHAR(200)                                        NOT NULL,
    "birthday"  DATE
);

CREATE TABLE IF NOT EXISTS "friendship"
(
    "user_id"   BIGINT  NOT NULL,
    "friend_id" BIGINT  NOT NULL,
    "status"    BOOLEAN NOT NULL
);

CREATE TABLE IF NOT EXISTS "likes"
(
    "film_id" BIGINT NOT NULL,
    "user_id" BIGINT NOT NULL,
    "date"    DATE   NOT NULL,
    PRIMARY KEY ("film_id", "user_id")
);

ALTER TABLE "films"
    DROP CONSTRAINT IF EXISTS "fk_films_rating_id";
ALTER TABLE "film_genres"
    DROP CONSTRAINT IF EXISTS "fk_films_genres_film_id";
ALTER TABLE "film_genres"
    DROP CONSTRAINT IF EXISTS "fk_film_genres_genres_id";
ALTER TABLE "friendship"
    DROP CONSTRAINT IF EXISTS "fk_friendship_user_id";
ALTER TABLE "friendship"
    DROP CONSTRAINT IF EXISTS "fk_friendship_friend_id";
ALTER TABLE "likes"
    DROP CONSTRAINT IF EXISTS "fk_likes_film_id";
ALTER TABLE "likes"
    DROP CONSTRAINT IF EXISTS "fk_likes_user_id";

ALTER TABLE "films"
    ADD CONSTRAINT "fk_films_rating_id" FOREIGN KEY ("rating_id") REFERENCES PUBLIC.RATING (RATING_ID);
ALTER TABLE "film_genres"
    ADD CONSTRAINT "fk_films_genres_film_id" FOREIGN KEY ("film_id") REFERENCES "films" ("film_id");
ALTER TABLE "film_genres"
    ADD CONSTRAINT "fk_film_genres_genres_id" FOREIGN KEY ("genre_id") REFERENCES "genres" ("genre_id");
ALTER TABLE "friendship"
    ADD CONSTRAINT "fk_friendship_user_id" FOREIGN KEY ("user_id") REFERENCES "users" ("user_id");
ALTER TABLE "friendship"
    ADD CONSTRAINT "fk_friendship_friend_id" FOREIGN KEY ("friend_id") REFERENCES "users" ("user_id");
ALTER TABLE "likes"
    ADD CONSTRAINT "fk_likes_film_id" FOREIGN KEY ("film_id") REFERENCES "films" ("film_id");
ALTER TABLE "likes"
    ADD CONSTRAINT "fk_likes_user_id" FOREIGN KEY ("user_id") REFERENCES "users" ("user_id");


